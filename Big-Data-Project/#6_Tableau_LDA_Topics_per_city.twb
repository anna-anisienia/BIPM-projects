<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10400.17.0915.2112                               -->
<workbook original-version='10.4' source-build='10.4.0 (10400.17.0915.2112)' source-platform='win' version='10.4' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='cities_df (default.cities_df) (default)' inline='true' name='federated.0poa4ok0wtbz5i1634fb513txfmw' version='10.4'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='sparkyelp.azurehdinsight.net' name='spark.1ithyge0psuerp1af3z3o0gx16qr'>
            <connection authentication='yes' authentication-type='6' class='spark' connection-type='3' dbname='' http-path='' odbc-connect-string-extras='' one-time-sql='' port='443' schema='default' server='sparkyelp.azurehdinsight.net' sslcert='' sslmode='' transport-type='2' username='admin'>
              <connection-customization class='spark' enabled='false' version='10.4'>
                <vendor name='spark' />
                <driver name='spark' />
                <customizations>
                  <customization name='CAP_AUTH_DB_IMPERSONATE' value='no' />
                  <customization name='CAP_AUTH_KERBEROS_IMPERSONATE' value='no' />
                  <customization name='CAP_CONNECT_STORED_PROCEDURE' value='no' />
                  <customization name='CAP_CREATE_TEMP_TABLES' value='no' />
                  <customization name='CAP_DATASERVER_MAGIC_NUMBER' value='no' />
                  <customization name='CAP_DEFERS_CONNECTION_VERIFICATION' value='no' />
                  <customization name='CAP_EQUIJOINS_ONLY' value='no' />
                  <customization name='CAP_FAST_METADATA' value='no' />
                  <customization name='CAP_HIVE_FIX_METADATA_NAMES' value='no' />
                  <customization name='CAP_INDEX_TEMP_TABLES' value='no' />
                  <customization name='CAP_INSERT_TEMP_EXEC_STORED_PROCEDURE' value='no' />
                  <customization name='CAP_LOCAL_ALIASES_CASE_INSENSITIVE' value='no' />
                  <customization name='CAP_ODBC_ALWAYS_THROW_CONNECT_ERRORS' value='no' />
                  <customization name='CAP_ODBC_BIND_FORCE_DATETIME_AS_CHAR' value='no' />
                  <customization name='CAP_ODBC_BIND_FORCE_DATE_AS_CHAR' value='no' />
                  <customization name='CAP_ODBC_BIND_FORCE_MAX_STRING_BUFFERS' value='no' />
                  <customization name='CAP_ODBC_BIND_FORCE_MEDIUM_STRING_BUFFERS' value='no' />
                  <customization name='CAP_ODBC_BIND_FORCE_SIGNED' value='no' />
                  <customization name='CAP_ODBC_BIND_FORCE_SMALL_STRING_BUFFERS' value='no' />
                  <customization name='CAP_ODBC_BIND_SUPPRESS_INT64' value='no' />
                  <customization name='CAP_ODBC_BIND_SUPPRESS_PREFERRED_TYPES' value='no' />
                  <customization name='CAP_ODBC_BIND_SUPPRESS_WIDE_CHAR' value='no' />
                  <customization name='CAP_ODBC_CURSOR_DYNAMIC' value='no' />
                  <customization name='CAP_ODBC_CURSOR_FORWARD_ONLY' value='yes' />
                  <customization name='CAP_ODBC_CURSOR_KEYSET_DRIVEN' value='no' />
                  <customization name='CAP_ODBC_CURSOR_STATIC' value='no' />
                  <customization name='CAP_ODBC_DRIVER_HIVE_ASSUME_LATEST' value='no' />
                  <customization name='CAP_ODBC_ERROR_IGNORE_FALSE_ALARM' value='no' />
                  <customization name='CAP_ODBC_FETCH_BUFFERS_RESIZABLE' value='no' />
                  <customization name='CAP_ODBC_FETCH_BUFFERS_SIZE_MASSIVE' value='no' />
                  <customization name='CAP_ODBC_FETCH_CONTINUE_ON_ERROR' value='no' />
                  <customization name='CAP_ODBC_FORCE_SINGLE_ROW_BINDING' value='no' />
                  <customization name='CAP_ODBC_METADATA_STRING_LENGTH_UNKNOWN' value='no' />
                  <customization name='CAP_ODBC_METADATA_SUPPRESS_SQLCOLUMNS_API' value='no' />
                  <customization name='CAP_ODBC_METADATA_SUPPRESS_SQLFOREIGNKEYS_API' value='yes' />
                  <customization name='CAP_ODBC_METADATA_SUPPRESS_SQLPRIMARYKEYS_API' value='no' />
                  <customization name='CAP_ODBC_METADATA_SUPPRESS_SQLSTATISTICS_API' value='yes' />
                  <customization name='CAP_ODBC_REBIND_SKIP_UNBIND' value='no' />
                  <customization name='CAP_ODBC_TRIM_VARCHAR_PADDING' value='no' />
                  <customization name='CAP_ODBC_UNBIND_AUTO' value='no' />
                  <customization name='CAP_ODBC_UNBIND_BATCH' value='no' />
                  <customization name='CAP_ODBC_UNBIND_EACH' value='yes' />
                  <customization name='CAP_ODBC_USE_NATIVE_PROTOCOL' value='yes' />
                  <customization name='CAP_QUERY_ALLOW_PARTIAL_AGGREGATION' value='yes' />
                  <customization name='CAP_QUERY_ALWAYS_USE_AQ_CACHE' value='no' />
                  <customization name='CAP_QUERY_BLENDING_ALWAYS_USE_LOCAL_MAPPING_TABLES' value='no' />
                  <customization name='CAP_QUERY_BLENDING_PREFER_LOCAL_MAPPING_TABLES' value='yes' />
                  <customization name='CAP_QUERY_BLENDING_REMOTE_MAPPING_TABLES' value='yes' />
                  <customization name='CAP_QUERY_BOOLEXPR_TO_INTEXPR' value='no' />
                  <customization name='CAP_QUERY_BOOL_IDENTIFIER_TO_LOGICAL' value='no' />
                  <customization name='CAP_QUERY_EMPTY_DOMAIN_TOP' value='no' />
                  <customization name='CAP_QUERY_FORCE_AGGREGATE_MEASURES' value='no' />
                  <customization name='CAP_QUERY_GROUP_BY_ALIAS' value='no' />
                  <customization name='CAP_QUERY_GROUP_BY_DEGREE' value='no' />
                  <customization name='CAP_QUERY_HAVING_REQUIRES_GROUP_BY' value='no' />
                  <customization name='CAP_QUERY_HAVING_UNSUPPORTED' value='no' />
                  <customization name='CAP_QUERY_JOIN_ACROSS_SCHEMAS' value='yes' />
                  <customization name='CAP_QUERY_JOIN_ASSUME_CONSTRAINED' value='no' />
                  <customization name='CAP_QUERY_JOIN_PUSH_DOWN_CONDITION_EXPRESSIONS' value='no' />
                  <customization name='CAP_QUERY_JOIN_REQUIRES_SCOPE' value='no' />
                  <customization name='CAP_QUERY_JOIN_REQUIRES_SUBQUERY' value='no' />
                  <customization name='CAP_QUERY_NULL_REQUIRES_CAST' value='yes' />
                  <customization name='CAP_QUERY_RECOMPILE_FAILED_QUERY' value='no' />
                  <customization name='CAP_QUERY_SELECT_ALIASES_SORTED' value='no' />
                  <customization name='CAP_QUERY_SORT_BY' value='yes' />
                  <customization name='CAP_QUERY_SORT_BY_DEGREE' value='no' />
                  <customization name='CAP_QUERY_SUBQUERIES' value='yes' />
                  <customization name='CAP_QUERY_SUBQUERIES_WITH_TOP' value='yes' />
                  <customization name='CAP_QUERY_SUBQUERY_QUERY_CONTEXT' value='yes' />
                  <customization name='CAP_QUERY_SUPPORTS_LODJOINS' value='yes' />
                  <customization name='CAP_QUERY_SUPPRESS_CHECK_DOMAIN_LITERALS_THRESHOLD' value='no' />
                  <customization name='CAP_QUERY_SUPPRESS_NULL_CHECK_QUERIES' value='no' />
                  <customization name='CAP_QUERY_TOPSTYLE_LIMIT' value='no' />
                  <customization name='CAP_QUERY_TOPSTYLE_ROWNUM' value='no' />
                  <customization name='CAP_QUERY_TOPSTYLE_TOP' value='no' />
                  <customization name='CAP_QUERY_TOP_0_METADATA' value='yes' />
                  <customization name='CAP_QUERY_TOP_N' value='yes' />
                  <customization name='CAP_QUERY_USE_DOMAIN_RANGES_OPTIMIZATION' value='yes' />
                  <customization name='CAP_QUERY_USE_QUERY_FUSION' value='yes' />
                  <customization name='CAP_QUERY_WHERE_FALSE_METADATA' value='no' />
                  <customization name='CAP_SELECT_INTO' value='no' />
                  <customization name='CAP_SELECT_TOP_INTO' value='no' />
                  <customization name='CAP_STORED_PROCEDURE_PREFER_TEMP_TABLE' value='no' />
                  <customization name='CAP_STORED_PROCEDURE_REPAIR_TEMP_TABLE_STRINGS' value='no' />
                  <customization name='CAP_STORED_PROCEDURE_TEMP_TABLE_FROM_BUFFER' value='no' />
                  <customization name='CAP_STORED_PROCEDURE_TEMP_TABLE_FROM_NEW_PROTOCOL' value='no' />
                  <customization name='CAP_SUPPRESS_CONNECTION_POOLING' value='yes' />
                  <customization name='CAP_SUPPRESS_DISCOVERY_QUERIES' value='no' />
                  <customization name='CAP_SUPPRESS_GET_SERVER_TIME' value='yes' />
                  <customization name='CAP_SUPPRESS_QUICK_FILTER_ACCELERATION_VIEWS' value='no' />
                </customizations>
              </connection-customization>
            </connection>
          </named-connection>
        </named-connections>
        <relation connection='spark.1ithyge0psuerp1af3z3o0gx16qr' name='cities_df' table='[default].[cities_df]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[cities_df]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>65536</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Term</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Term]</local-name>
            <parent-name>[cities_df]</parent-name>
            <remote-alias>Term</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>65536</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Topic</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Topic]</local-name>
            <parent-name>[cities_df]</parent-name>
            <remote-alias>Topic</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Weight</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Weight]</local-name>
            <parent-name>[cities_df]</parent-name>
            <remote-alias>Weight</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>4</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Topic]' role='dimension' type='ordinal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.477178' measure-ordering='alphabetic' measure-percentage='0.522822' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Las Vegas'>
      <table>
        <view>
          <datasources>
            <datasource caption='cities_df (default.cities_df) (default)' name='federated.0poa4ok0wtbz5i1634fb513txfmw' />
          </datasources>
          <datasource-dependencies datasource='federated.0poa4ok0wtbz5i1634fb513txfmw'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Term]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[Topic]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Weight]' role='measure' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Term]' derivation='None' name='[none:Term:nk]' pivot='key' type='nominal' />
            <column-instance column='[Topic]' derivation='None' name='[none:Topic:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Weight]' derivation='Sum' name='[sum:Weight:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0poa4ok0wtbz5i1634fb513txfmw].[none:City:nk]'>
            <groupfilter function='member' level='[none:City:nk]' member='&quot;Toronto&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0poa4ok0wtbz5i1634fb513txfmw].[none:Topic:ok]'>
            <groupfilter from='1' function='range' level='[none:Topic:ok]' to='10' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0poa4ok0wtbz5i1634fb513txfmw].[none:City:nk]</column>
            <column>[federated.0poa4ok0wtbz5i1634fb513txfmw].[none:Topic:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='cell'>
                <format attr='wrap' value='on' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
                <format attr='size' value='1.4172928333282471' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0poa4ok0wtbz5i1634fb513txfmw].[none:Topic:ok] / [federated.0poa4ok0wtbz5i1634fb513txfmw].[none:Term:nk])</rows>
        <cols>[federated.0poa4ok0wtbz5i1634fb513txfmw].[sum:Weight:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Montreal'>
      <table>
        <view>
          <datasources>
            <datasource caption='cities_df (default.cities_df) (default)' name='federated.0poa4ok0wtbz5i1634fb513txfmw' />
          </datasources>
          <datasource-dependencies datasource='federated.0poa4ok0wtbz5i1634fb513txfmw'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Term]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[Topic]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Weight]' role='measure' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Term]' derivation='None' name='[none:Term:nk]' pivot='key' type='nominal' />
            <column-instance column='[Topic]' derivation='None' name='[none:Topic:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Weight]' derivation='Sum' name='[sum:Weight:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0poa4ok0wtbz5i1634fb513txfmw].[none:City:nk]'>
            <groupfilter function='member' level='[none:City:nk]' member='&quot;Montréal&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0poa4ok0wtbz5i1634fb513txfmw].[none:Topic:ok]'>
            <groupfilter from='1' function='range' level='[none:Topic:ok]' to='10' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0poa4ok0wtbz5i1634fb513txfmw].[none:City:nk]</column>
            <column>[federated.0poa4ok0wtbz5i1634fb513txfmw].[none:Topic:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='cell'>
                <format attr='wrap' value='on' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
                <format attr='size' value='1.4172928333282471' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0poa4ok0wtbz5i1634fb513txfmw].[none:Topic:ok] / [federated.0poa4ok0wtbz5i1634fb513txfmw].[none:Term:nk])</rows>
        <cols>[federated.0poa4ok0wtbz5i1634fb513txfmw].[sum:Weight:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Toronto'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Toronto</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cities_df (default.cities_df) (default)' name='federated.0poa4ok0wtbz5i1634fb513txfmw' />
          </datasources>
          <datasource-dependencies datasource='federated.0poa4ok0wtbz5i1634fb513txfmw'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Term]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[Topic]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Weight]' role='measure' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Term]' derivation='None' name='[none:Term:nk]' pivot='key' type='nominal' />
            <column-instance column='[Topic]' derivation='None' name='[none:Topic:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Weight]' derivation='Sum' name='[sum:Weight:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0poa4ok0wtbz5i1634fb513txfmw].[none:City:nk]'>
            <groupfilter function='member' level='[none:City:nk]' member='&quot;Toronto&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0poa4ok0wtbz5i1634fb513txfmw].[none:Topic:ok]'>
            <groupfilter from='1' function='range' level='[none:Topic:ok]' to='10' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0poa4ok0wtbz5i1634fb513txfmw].[none:City:nk]</column>
            <column>[federated.0poa4ok0wtbz5i1634fb513txfmw].[none:Topic:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='cell'>
                <format attr='wrap' value='on' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
                <format attr='size' value='1.4172928333282471' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0poa4ok0wtbz5i1634fb513txfmw].[none:Topic:ok] / [federated.0poa4ok0wtbz5i1634fb513txfmw].[none:Term:nk])</rows>
        <cols>[federated.0poa4ok0wtbz5i1634fb513txfmw].[sum:Weight:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Toronto'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0poa4ok0wtbz5i1634fb513txfmw].[none:City:nk]</field>
            <field>[federated.0poa4ok0wtbz5i1634fb513txfmw].[none:Term:nk]</field>
            <field>[federated.0poa4ok0wtbz5i1634fb513txfmw].[none:Topic:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Montreal'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0poa4ok0wtbz5i1634fb513txfmw].[none:City:nk]</field>
            <field>[federated.0poa4ok0wtbz5i1634fb513txfmw].[none:Term:nk]</field>
            <field>[federated.0poa4ok0wtbz5i1634fb513txfmw].[none:Topic:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Las Vegas'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0poa4ok0wtbz5i1634fb513txfmw].[none:City:nk]</field>
            <field>[federated.0poa4ok0wtbz5i1634fb513txfmw].[none:Term:nk]</field>
            <field>[federated.0poa4ok0wtbz5i1634fb513txfmw].[none:Topic:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Las Vegas' width='192'>
      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
      9DT/H1e55IBf3lYeAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Montreal' width='192'>
      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
      PY1yAEVP8/8BWzizgoDOh9UAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Toronto' width='192'>
      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
      9DT/H1e55IBf3lYeAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
